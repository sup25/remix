name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger on push to `main` branch
  pull_request:
    branches:
      - main # Trigger on pull request to `main` branch

jobs:
  build:
    runs-on: ubuntu-latest
    environment: secrets

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          docker build -t supgg/remix-app:${{ github.sha }} -t supgg/remix-app:latest .
          docker push supgg/remix-app:${{ github.sha }}
          docker push supgg/remix-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build # Wait for the build job to finish

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # SSH into the EC2 instance and deploy the app
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            set -e

            # Pull the latest image
            docker pull supgg/remix-app:latest

            # Save the old version tag (for rollback)
            docker tag supgg/remix-app:latest supgg/remix-app:previous || true

            # Stop and remove the current container
            docker stop remix-app || true
            docker rm remix-app || true

            # Kill any process running on port 3000
            sudo fuser -k 3000/tcp || true

            # Run the new container
            docker run -d --name remix-app -p 3000:3000 -e DATABASE_URL=${{ secrets.DATABASE_URL }} supgg/remix-app:latest

            # Wait for the app to start and perform health check
            retries=5
            while ! curl -sf http://localhost:3000/health && [ $retries -gt 0 ]; do
              echo "Waiting for app to become healthy... Retries left: $retries"
              retries=$((retries - 1))
              sleep 5
            done

            if [ $retries -eq 0 ]; then
              echo "Health check failed. Rolling back to the previous version..."
              docker stop remix-app || true
              docker rm remix-app || true
              docker run -d --name remix-app -p 3000:3000 supgg/remix-app:previous
              exit 1
            fi

            echo "Deployment succeeded!"
